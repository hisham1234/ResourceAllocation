//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IP.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        IP.ServiceReference1.CompositeType GetDataUsingDataContract(IP.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<IP.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(IP.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBatch", ReplyAction="http://tempuri.org/IService1/addBatchResponse")]
        string addBatch(string b_name, int n_o_s, string d_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addBatch", ReplyAction="http://tempuri.org/IService1/addBatchResponse")]
        System.Threading.Tasks.Task<string> addBatchAsync(string b_name, int n_o_s, string d_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDegree", ReplyAction="http://tempuri.org/IService1/addDegreeResponse")]
        string addDegree(string d_name, string uni, string duration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDegree", ReplyAction="http://tempuri.org/IService1/addDegreeResponse")]
        System.Threading.Tasks.Task<string> addDegreeAsync(string d_name, string uni, string duration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addGroup", ReplyAction="http://tempuri.org/IService1/addGroupResponse")]
        string addGroup(string g_name, int n_of_students, string s_number, string e_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addGroup", ReplyAction="http://tempuri.org/IService1/addGroupResponse")]
        System.Threading.Tasks.Task<string> addGroupAsync(string g_name, int n_of_students, string s_number, string e_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLabs", ReplyAction="http://tempuri.org/IService1/addLabsResponse")]
        string addLabs(string lab_id, int capacity, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLabs", ReplyAction="http://tempuri.org/IService1/addLabsResponse")]
        System.Threading.Tasks.Task<string> addLabsAsync(string lab_id, int capacity, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLectureHalls", ReplyAction="http://tempuri.org/IService1/addLectureHallsResponse")]
        string addLectureHalls(string hall_id, int capacity, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLectureHalls", ReplyAction="http://tempuri.org/IService1/addLectureHallsResponse")]
        System.Threading.Tasks.Task<string> addLectureHallsAsync(string hall_id, int capacity, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLecurer", ReplyAction="http://tempuri.org/IService1/addLecurerResponse")]
        string addLecurer(string nic, string fname, string lname, string lec_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addLecurer", ReplyAction="http://tempuri.org/IService1/addLecurerResponse")]
        System.Threading.Tasks.Task<string> addLecurerAsync(string nic, string fname, string lname, string lec_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addModule", ReplyAction="http://tempuri.org/IService1/addModuleResponse")]
        string addModule(string m_id, string m_name, string lec_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addModule", ReplyAction="http://tempuri.org/IService1/addModuleResponse")]
        System.Threading.Tasks.Task<string> addModuleAsync(string m_id, string m_name, string lec_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNotice", ReplyAction="http://tempuri.org/IService1/addNoticeResponse")]
        string addNotice(string val_date, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNotice", ReplyAction="http://tempuri.org/IService1/addNoticeResponse")]
        System.Threading.Tasks.Task<string> addNoticeAsync(string val_date, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addInstructor", ReplyAction="http://tempuri.org/IService1/addInstructorResponse")]
        string addInstructor(string nic, string ins_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addInstructor", ReplyAction="http://tempuri.org/IService1/addInstructorResponse")]
        System.Threading.Tasks.Task<string> addInstructorAsync(string nic, string ins_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTerm", ReplyAction="http://tempuri.org/IService1/addTermResponse")]
        string addTerm(string t_id, string start_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTerm", ReplyAction="http://tempuri.org/IService1/addTermResponse")]
        System.Threading.Tasks.Task<string> addTermAsync(string t_id, string start_date, string end_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/viewLecturers", ReplyAction="http://tempuri.org/IService1/viewLecturersResponse")]
        System.Data.DataTable viewLecturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/viewLecturers", ReplyAction="http://tempuri.org/IService1/viewLecturersResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> viewLecturersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : IP.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<IP.ServiceReference1.IService1>, IP.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public IP.ServiceReference1.CompositeType GetDataUsingDataContract(IP.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<IP.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(IP.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string addBatch(string b_name, int n_o_s, string d_id) {
            return base.Channel.addBatch(b_name, n_o_s, d_id);
        }
        
        public System.Threading.Tasks.Task<string> addBatchAsync(string b_name, int n_o_s, string d_id) {
            return base.Channel.addBatchAsync(b_name, n_o_s, d_id);
        }
        
        public string addDegree(string d_name, string uni, string duration) {
            return base.Channel.addDegree(d_name, uni, duration);
        }
        
        public System.Threading.Tasks.Task<string> addDegreeAsync(string d_name, string uni, string duration) {
            return base.Channel.addDegreeAsync(d_name, uni, duration);
        }
        
        public string addGroup(string g_name, int n_of_students, string s_number, string e_number) {
            return base.Channel.addGroup(g_name, n_of_students, s_number, e_number);
        }
        
        public System.Threading.Tasks.Task<string> addGroupAsync(string g_name, int n_of_students, string s_number, string e_number) {
            return base.Channel.addGroupAsync(g_name, n_of_students, s_number, e_number);
        }
        
        public string addLabs(string lab_id, int capacity, string status) {
            return base.Channel.addLabs(lab_id, capacity, status);
        }
        
        public System.Threading.Tasks.Task<string> addLabsAsync(string lab_id, int capacity, string status) {
            return base.Channel.addLabsAsync(lab_id, capacity, status);
        }
        
        public string addLectureHalls(string hall_id, int capacity, string status) {
            return base.Channel.addLectureHalls(hall_id, capacity, status);
        }
        
        public System.Threading.Tasks.Task<string> addLectureHallsAsync(string hall_id, int capacity, string status) {
            return base.Channel.addLectureHallsAsync(hall_id, capacity, status);
        }
        
        public string addLecurer(string nic, string fname, string lname, string lec_id) {
            return base.Channel.addLecurer(nic, fname, lname, lec_id);
        }
        
        public System.Threading.Tasks.Task<string> addLecurerAsync(string nic, string fname, string lname, string lec_id) {
            return base.Channel.addLecurerAsync(nic, fname, lname, lec_id);
        }
        
        public string addModule(string m_id, string m_name, string lec_id) {
            return base.Channel.addModule(m_id, m_name, lec_id);
        }
        
        public System.Threading.Tasks.Task<string> addModuleAsync(string m_id, string m_name, string lec_id) {
            return base.Channel.addModuleAsync(m_id, m_name, lec_id);
        }
        
        public string addNotice(string val_date, string msg) {
            return base.Channel.addNotice(val_date, msg);
        }
        
        public System.Threading.Tasks.Task<string> addNoticeAsync(string val_date, string msg) {
            return base.Channel.addNoticeAsync(val_date, msg);
        }
        
        public string addInstructor(string nic, string ins_id) {
            return base.Channel.addInstructor(nic, ins_id);
        }
        
        public System.Threading.Tasks.Task<string> addInstructorAsync(string nic, string ins_id) {
            return base.Channel.addInstructorAsync(nic, ins_id);
        }
        
        public string addTerm(string t_id, string start_date, string end_date) {
            return base.Channel.addTerm(t_id, start_date, end_date);
        }
        
        public System.Threading.Tasks.Task<string> addTermAsync(string t_id, string start_date, string end_date) {
            return base.Channel.addTermAsync(t_id, start_date, end_date);
        }
        
        public System.Data.DataTable viewLecturers() {
            return base.Channel.viewLecturers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> viewLecturersAsync() {
            return base.Channel.viewLecturersAsync();
        }
    }
}
